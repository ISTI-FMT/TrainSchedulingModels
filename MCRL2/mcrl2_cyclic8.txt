
%--------------------------------------------------------------
% T0 := [ 1, 9,10,13,15,20,23,22,17,18,11, 9, 2, 1]; -- G1
% T1 := [ 3, 9,10,13,15,20,24,22,17,18,11, 9, 4, 3]; -- R1
% T2 := [ 5,27,11,13,16,20,25,22,17,18,12,27, 6, 5]; -- Y1
% T3 := [ 7,27,11,13,16,20,26,22,17,18,12,27, 8, 7]; -- B1
% T4 := [23,22,17,18,11, 9, 2, 1, 9,10,13,15,20,23]; -- G2
% T5 := [24,22,17,18,11, 9, 4, 3, 9,10,13,15,20,24]; -- R2
% T6 := [25,22,17,18,12,27, 6, 5,27,11,13,16,20,25]; -- Y2
% T7 := [26,22,17,18,12,27, 8, 7,27,11,13,16,20,26]; -- B2
%--------------------------------------------------------------

map T0: Nat -> Nat;
 eqn T0(0)= 1; T0(1)= 9; T0(2)=10; T0( 3)=13; T0( 4)=15; T0( 5)=20; T0( 6)=23;
     T0(7)=22; T0(8)=17; T0(9)=18; T0(10)=11; T0(11)= 9; T0(12)= 2; T0(13)= 1;
     
map T1: Nat -> Nat;
 eqn T1(0)= 3; T1(1)=9;  T1(2)=10; T1( 3)=13; T1( 4)=15; T1( 5)=20; T1( 6)=24;
     T1(7)=22; T1(8)=17; T1(9)=18; T1(10)=11; T1(11)= 9; T1(12)= 4; T1(13)= 3;
  
map T2: Nat -> Nat;
 eqn T2(0)= 5; T2(1)=27; T2(2)=11; T2( 3)=13; T2( 4)=16; T2( 5)=20; T2( 6)=25;
     T2(7)=22; T2(8)=17; T2(9)=18; T2(10)=12; T2(11)=27; T2(12)= 6; T2(13)= 5;
  
map T3: Nat -> Nat;
 eqn T3(0)= 7; T3(1)=27; T3(2)=11; T3( 3)=13; T3( 4)=16; T3( 5)=20; T3( 6)=26;
     T3(7)=22; T3(8)=17; T3(9)=18; T3(10)=12; T3(11)=27; T3(12)= 8; T3(13)= 7;
  
map T4: Nat -> Nat;
 eqn T4(0)=23; T4(1)=22; T4(2)=17; T4( 3)=18; T4( 4)=11; T4( 5)= 9; T4( 6)= 2;
     T4(7)= 1; T4(8)= 9; T4(9)=10; T4(10)=13; T4(11)=15; T4(12)=20; T4(13)=23;
  
map T5: Nat -> Nat;
 eqn T5(0)=24; T5(1)=22; T5(2)=17; T5( 3)=18; T5( 4)=11; T5( 5)=9;  T5( 6)= 4;
     T5(7)= 3; T5(8)= 9; T5(9)=10; T5(10)=13; T5(11)=15; T5(12)=20; T5(13)=24;
  
map T6: Nat -> Nat;
 eqn T6(0)=25; T6(1)=22; T6(2)=17; T6(3)=18; T6(4)=12; T6(5)=27; T6(6)=6;
     T6(7)= 5; T6(8)=27; T6(9)=11; T6(10)=13; T6(11)=16; T6(12)=20; T6(13)=25;
     
map T7: Nat -> Nat;
 eqn T7(0)=26; T7(1)=22; T7(2)=17; T7( 3)=18; T7( 4)=12; T7( 5)=27; T7( 6)= 8;
     T7(7)= 7; T7(8)=27; T7(9)=11; T7(10)=13; T7(11)=16; T7(12)=20; T7(13)=26;
  
% ------ region A: train constraints ------
%         0  1  2  3  4  5  6  7  8  9 10 11 12 13
% A0 := [ 0, 0, 0, 1, 0,-1, 0, 1, 0, 0,-1, 0, 0, 0]; -- G1
% A1 := [ 0, 0, 0, 1, 0,-1, 0, 1, 0, 0,-1, 0, 0, 0]; -- R1
% A2 := [ 0, 0, 1,-1, 0, 1, 0, 0, 0,-1, 0, 0, 0, 0]; -- Y1
% A3 := [ 0, 0, 1,-1, 0, 0, 0, 1, 0,-1, 0, 0, 0, 0]; -- B1
% A4 := [ 0, 1, 0, 0,-1, 0, 0, 0, 0, 0, 1, 0,-1, 0]; -- G2
% A5 := [ 0, 1, 0, 0,-1, 0, 0, 0, 0, 0, 1, 0,-1, 0]; -- R2
% A6 := [ 0, 0, 0,-1, 0, 0, 0, 0, 0, 1,-1, 0, 1, 0]; -- Y2
% A7 := [ 0, 1, 0,-1, 0, 0, 0, 0, 0, 1,-1, 0, 0, 0]; -- B2
% ------------------------------------------
map  LA: Nat;  %  limit for region A
 eqn  LA = 7;
 
map A0: Nat -> Int;
 eqn A0(0)=0; A0(1)=0; A0(2)=0; A0( 3)= 1; A0( 4)=0; A0( 5)=-1; A0( 6)=0;
 eqn A0(7)=1; A0(8)=0; A0(9)=0; A0(10)=-1; A0(11)=0; A0(12)= 0; A0(13)=0;
 
map A1: Nat -> Int;
 eqn A1(0)=0; A1(1)=0; A1(2)=0; A1( 3)= 1; A1( 4)=0; A1( 5)=-1; A1( 6)=0;
 eqn A1(7)=1; A1(8)=0; A1(9)=0; A1(10)=-1; A1(11)=0; A1(12)= 0; A1(13)=0;
 
map A2: Nat -> Int;
 eqn A2(0)=0; A2(1)=0; A2(2)= 1; A2( 3)=-1; A2( 4)=0; A2( 5)= 1; A2( 6)=0;
 eqn A2(7)=0; A2(8)=0; A2(9)=-1; A2(10)= 0; A2(11)=0; A2(12)= 0; A2(13)=0;
 
map A3: Nat -> Int;
 eqn A3(0)=0; A3(1)=0; A3(2)= 1; A3( 3)=-1; A3( 4)=0; A3( 5)= 0; A3( 6)=0;
 eqn A3(7)=1; A3(8)=0; A3(9)=-1; A3(10)= 0; A3(11)=0; A3(12)= 0; A3(13)=0;
 
map A4: Nat -> Int;
 eqn A4(0)=0; A4(1)=1; A4(2)=0; A4( 3)=0; A4( 4)=-1; A4( 5)= 0; A4( 6)=0;
 eqn A4(7)=0; A4(8)=0; A4(9)=0; A4(10)=1; A4(11)= 0; A4(12)=-1; A4(13)=0;
 
map A5: Nat -> Int;
 eqn A5(0)=0; A5(1)=1; A5(2)=0; A5( 3)=0; A5( 4)=-1; A5( 5)= 0; A5( 6)=0;
 eqn A5(7)=0; A5(8)=0; A5(9)=0; A5(10)=1; A5(11)= 0; A5(12)=-1; A5(13)=0;
 
map A6: Nat -> Int;
 eqn A6(0)=0; A6(1)=0; A6(2)=0; A6( 3)=-1; A6( 4)=0; A6( 5)= 0; A6( 6)=0;
 eqn A6(7)=0; A6(8)=0; A6(9)=1; A6(10)=-1; A6(11)=0; A6(12)= 1; A6(13)=0;
 
map A7: Nat -> Int;
 eqn A7(0)=0; A7(1)=1; A7(2)=0; A7( 3)=-1; A7( 4)=0; A7( 5)= 0; A7( 6)=0;
 eqn A7(7)=0; A7(8)=0; A7(9)=1; A7(10)=-1; A7(11)=0; A7(12)= 0; A7(13)=0;

% ------- region B: train constraints ------
%         0  1  2  3  4  5  6  7  8  9 10 11 12 13
% B0 := [ 0, 0, 0, 1, 0,-1, 0, 1, 0, 0,-1, 0, 0, 0]; -- G1
% B1 := [ 0, 0, 0, 1, 0,-1, 0, 1, 0, 0,-1, 0, 0, 0]; -- R1
% B2 := [ 0, 0, 1,-1, 0, 0, 0, 1, 0,-1, 0, 0, 0, 0]; -- Y1
% B3 := [ 0, 0, 1,-1, 0, 1, 0, 0, 0,-1, 0, 0, 0, 0]; -- B1
% B4 := [ 0, 1, 0, 0,-1, 0, 0, 0, 0, 0, 1, 0,-1, 0]; -- G2
% B5 := [ 0, 1, 0, 0,-1, 0, 0, 0, 0, 0, 1, 0,-1, 0]; -- R2
% B6 := [ 0, 1, 0,-1, 0, 0, 0, 0, 0, 1,-1, 0, 0, 0]; -- Y2
% B7 := [ 0, 0, 0,-1, 0, 0, 0, 0, 0, 1,-1, 0, 1, 0]; -- B2
% ------------------------------------------
map  LB: Nat;  %  limit for region B
 eqn  LB = 7;
 
map B0: Nat -> Int;
 eqn B0(0)=0; B0(1)=0; B0(2)=0; B0( 3)= 1; B0( 4)=0; B0( 5)=-1; B0( 6)=0;
 eqn B0(7)=1; B0(8)=0; B0(9)=0; B0(10)=-1; B0(11)=0; B0(12)= 0; B0(13)=0;
 
map B1: Nat -> Int;
 eqn B1(0)=0; B1(1)=0; B1(2)=0; B1( 3)= 1; B1( 4)=0; B1( 5)=-1; B1( 6)=0;
 eqn B1(7)=1; B1(8)=0; B1(9)=0; B1(10)=-1; B1(11)=0; B1(12)= 0; B1(13)=0;
 
map B2: Nat -> Int;
 eqn B2(0)=0; B2(1)=0; B2(2)= 1; B2( 3)=-1; B2( 4)=0; B2( 5)= 0; B2( 6)=0;
 eqn B2(7)=1; B2(8)=0; B2(9)=-1; B2(10)= 0; B2(11)=0; B2(12)= 0; B2(13)=0;
 
map B3: Nat -> Int;
 eqn B3(0)=0; B3(1)=0; B3(2)= 1; B3( 3)=-1; B3( 4)=0; B3( 5)= 1; B3( 6)=0;
 eqn B3(7)=0; B3(8)=0; B3(9)=-1; B3(10)= 0; B3(11)=0; B3(12)= 0; B3(13)=0;
 
map B4: Nat -> Int;
 eqn B4(0)=0; B4(1)=1; B4(2)=0; B4( 3)=-0; B4( 4)=-1; B4( 5)= 0; B4( 6)=0;
 eqn B4(7)=0; B4(8)=0; B4(9)=0; B4(10)= 1; B4(11)= 0; B4(12)=-1; B4(13)=0;
 
map B5: Nat -> Int;
 eqn B5(0)=0; B5(1)=1; B5(2)=0; B5( 3)=0; B5( 4)=-1; B5( 5)= 0; B5( 6)=0;
 eqn B5(7)=0; B5(8)=0; B5(9)=0; B5(10)=1; B5(11)= 0; B5(12)=-1; B5(13)=0;
 
map B6: Nat -> Int;
 eqn B6(0)=0; B6(1)=1; B6(2)=0; B6( 3)=-1; B6( 4)=0; B6( 5)= 0; B6( 6)=0;
 eqn B6(7)=0; B6(8)=0; B6(9)=1; B6(10)=-1; B6(11)=0; B6(12)= 0; B6(13)=0;
 
map B7: Nat -> Int;
 eqn B7(0)=0; B7(1)=0; B7(2)=0; B7( 3)=-1; B7( 4)=0; B7( 5)= 0; B7( 6)=0;
 eqn B7(7)=0; B7(8)=0; B7(9)=1; B7(10)=-1; B7(11)=0; B7(12)= 1; B7(13)=0;


%  ------- region C: train constraints ------
%         0  1  2  3  4  5  6  7  8  9 10 11 12 13
% C0 := [ 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,-1, 0, 0, 0]; -- G1
% C1 := [ 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,-1, 0, 0, 0]; -- R1
% C2 := [ 0, 0, 1, 0, 0,-1, 0, 1, 0,-1, 0, 0, 0, 0]; -- Y1
% C3 := [ 0, 0, 1, 0, 0,-1, 0, 1, 0,-1, 0, 0, 0, 0]; -- B1
% C4 := [ 0, 0, 0, 0,-1, 0, 0, 0, 0, 0, 0, 0, 1, 0]; -- G2
% C5 := [ 0, 1, 0, 0,-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]; -- R2
% C6 := [ 0, 1, 0,-1, 0, 0, 0, 0, 0, 1, 0, 0,-1, 0]; -- Y2
% C7 := [ 0, 1, 0,-1, 0, 0, 0, 0, 0, 1, 0, 0,-1, 0]; -- B2
%  ------------------------------------------
%
map  LC: Nat;  %  limit for region C
 eqn  LC = 7;
 
map C0: Nat -> Int;
 eqn C0(0)=0; C0(1)=0; C0(2)=0; C0( 3)= 0; C0( 4)=0; C0( 5)= 1; C0( 6)=0;
 eqn C0(7)=0; C0(8)=0; C0(9)=0; C0(10)=-1; C0(11)=0; C0(12)= 0; C0(13)=0;
 
map C1: Nat -> Int;
 eqn C1(0)=0; C1(1)=0; C1(2)=0; C1( 3)= 0; C1( 4)=0; C1( 5)= 0; C1( 6)=0;
 eqn C1(7)=1; C1(8)=0; C1(9)=0; C1(10)=-1; C1(11)=0; C1(12)= 0; C1(13)=0;
 
map C2: Nat -> Int;
 eqn C2(0)=0; C2(1)=0; C2(2)= 1; C2( 3)= 0; C2( 4)=0; C2( 5)=-1; C2( 6)=0;
 eqn C2(7)=1; C2(8)=0; C2(9)=-1; C2(10)= 0; C2(11)=0; C2(12)= 0; C2(13)=0;
 
map C3: Nat -> Int;
 eqn C3(0)=0; C3(1)=0; C3(2)= 1; C3( 3)= 0; C3( 4)=0; C3( 5)=-1; C3( 6)=0;
 eqn C3(7)=1; C3(8)=0; C3(9)=-1; C3(10)= 0; C3(11)=0; C3(12)= 0; C3(13)=0;
 
map C4: Nat -> Int;
 eqn C4(0)=0; C4(1)=0; C4(2)=0; C4( 3)= 0; C4( 4)=-1; C4( 5)= 0; C4( 6)=0;
 eqn C4(7)=0; C4(8)=0; C4(9)=0; C4(10)= 0; C4(11)= 0; C4(12)= 1; C4(13)=0;
 
map C5: Nat -> Int;
 eqn C5(0)=0; C5(1)=1; C5(2)=0; C5( 3)=0; C5( 4)=-1; C5( 5)= 0; C5( 6)=0;
 eqn C5(7)=0; C5(8)=0; C5(9)=0; C5(10)=0; C5(11)= 0; C5(12)= 0; C5(13)=0;
 
map C6: Nat -> Int;
 eqn C6(0)=0; C6(1)=1; C6(2)=0; C6( 3)=-1; C6( 4)=0; C6( 5)= 0; C6( 6)=0;
 eqn C6(7)=0; C6(8)=0; C6(9)=1; C6(10)= 0; C6(11)=0; C6(12)=-1; C6(13)=0;
 
map C7: Nat -> Int;
 eqn C7(0)=0; C7(1)=1; C7(2)=0; C7( 3)=-1; C7( 4)=0; C7( 5)= 0; C7( 6)=0;
 eqn C7(7)=0; C7(8)=0; C7(9)=1; C7(10)= 0; C7(11)=0; C7(12)=-1; C7(13)=0;

%  ------- region D: train constraints ------
%         0  1  2  3  4  5  6  7  8  9 10 11 12 13
% D0 := [ 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,-1, 0, 0, 0]; -- G1
% D1 := [ 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,-1, 0, 0, 0]; -- R1
% D2 := [ 0, 0, 1, 0, 0,-1, 0, 1, 0,-1, 0, 0, 0, 0]; -- Y1
% D3 := [ 0, 0, 1, 0, 0,-1, 0, 1, 0,-1, 0, 0, 0, 0]; -- B1
% D4 := [ 0, 1, 0, 0,-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]; -- G2
% D5 := [ 0, 0, 0, 0,-1, 0, 0, 0, 0, 0, 0, 0, 1, 0]; -- R2
% D6 := [ 0, 1, 0,-1, 0, 0, 0, 0, 0, 1, 0, 0,-1, 0]; -- Y2
% D7 := [ 0, 1, 0,-1, 0, 0, 0, 0, 0, 1, 0, 0,-1, 0]; -- B2
%  ------------------------------------------
map  LD: Nat;  %  limit for region D
 eqn  LD = 7;
 
map D0: Nat -> Int;
 eqn D0(0)=0; D0(1)=0; D0(2)=0; D0( 3)= 0; D0( 4)=0; D0( 5)= 0; D0( 6)=0;
 eqn D0(7)=1; D0(8)=0; D0(9)=0; D0(10)=-1; D0(11)=0; D0(12)= 0; D0(13)=0;

map D1: Nat -> Int;
 eqn D1(0)=0; D1(1)=0; D1(2)= 0; D1( 3)= 0; D1( 4)=0; D1( 5)= 1; D1( 6)=0;
 eqn D1(7)=0; D1(8)=0; D1(9)= 0; D1(10)=-1; D1(11)=0; D1(12)= 0; D1(13)=0;
 
map D2: Nat -> Int;
 eqn D2(0)=0; D2(1)=0; D2(2)= 1; D2( 3)= 0; D2( 4)=0; D2( 5)=-1; D2( 6)=0;
 eqn D2(7)=1; D2(8)=0; D2(9)=-1; D2(10)= 0; D2(11)=0; D2(12)= 0; D2(13)=0;
 
map D3: Nat -> Int;
 eqn D3(0)=0; D3(1)=0; D3(2)= 1; D3( 3)= 0; D3( 4)=0; D3( 5)=-1; D3( 6)=0;
 eqn D3(7)=1; D3(8)=0; D3(9)=-1; D3(10)= 0; D3(11)=0; D3(12)= 0; D3(13)=0;
 
map D4: Nat -> Int;
 eqn D4(0)=0; D4(1)=1; D4(2)=0; D4( 3)= 0; D4( 4)=-1; D4( 5)= 0; D4( 6)=0;
 eqn D4(7)=0; D4(8)=0; D4(9)=0; D4(10)= 0; D4(11)= 0; D4(12)= 0; D4(13)=0;
 
map D5: Nat -> Int;
 eqn D5(0)=0; D5(1)=0; D5(2)=0; D5( 3)=0; D5( 4)=-1; D5( 5)= 0; D5( 6)=0;
 eqn D5(7)=0; D5(8)=0; D5(9)=0; D5(10)=0; D5(11)= 0; D5(12)= 1; D5(13)=0;
 
map D6: Nat -> Int;
 eqn D6(0)=0; D6(1)=1; D6(2)=0; D6( 3)=-1; D6( 4)=0; D6( 5)= 0; D6( 6)=0;
 eqn D6(7)=0; D6(8)=0; D6(9)=1; D6(10)= 0; D6(11)=0; D6(12)=-1; D6(13)=0;
 
map D7: Nat -> Int;
 eqn D7(0)=0; D7(1)=1; D7(2)=0; D7( 3)=-1; D7( 4)= 0; D7( 5)= 0; D7( 6)=0;
 eqn D7(7)=0; D7(8)=0; D7(9)=1; D7(10)= 0; D7(11)= 0; D7(12)=-1; D7(13)=0;

act  arrived;
     move: Nat;

proc AllTrains(P0:Nat, P1:Nat, P2:Nat, P3:Nat, P4:Nat, P5:Nat, P6:Nat, P7:Nat, 
            RA: Int, RB: Int, RC: Int, RD: Int) = 
     (P0 < 13 &&    %  train0 has not yet reached all the steps of its mission
      T0(P0+1) != T1(P1)  && % next place of train0 not occupied by train1
      T0(P0+1) != T2(P2)  && % next place of train0 not occupied by train2
      T0(P0+1) != T3(P3)  &&
      T0(P0+1) != T4(P4)  &&
      T0(P0+1) != T5(P5)  &&
      T0(P0+1) != T6(P6)  &&
      T0(P0+1) != T7(P7)  && % next place of train0 not occupied by train7
      RA + A0(P0+1) <= LA && 
      RB + B0(P0+1) <= LB && 
      RC + C0(P0+1) <= LC && 
      RD + D0(P0+1) <= LD  
     )  ->
       move(0). AllTrains((P0+1)mod 13,P1,P2,P3,P4,P5,P6,P7,RA+A0(P0+1),RB+B0(P0+1),RC+C0(P0+1),RD+D0(P0+1))
     + 
     (P1 < 13 &&
      T1(P1+1) != T0(P0)  &&
      T1(P1+1) != T2(P2)  &&
      T1(P1+1) != T3(P3)  &&
      T1(P1+1) != T4(P4)  &&
      T1(P1+1) != T5(P5)  &&
      T1(P1+1) != T6(P6)  &&
      T1(P1+1) != T7(P7)  &&
      RA + A1(P1+1) <= LA && 
      RB + B1(P1+1) <= LB && 
      RC + C1(P1+1) <= LC && 
      RD + D1(P1+1) <= LD  
     )  ->
       move(1). AllTrains(P0,(P1+1)mod 13,P2,P3,P4,P5,P6,P7,RA+A1(P1+1),RB+B1(P1+1),RC+C1(P1+1),RD+D1(P1+1))
     +
     (P2 < 13 &&
      T2(P2+1) != T0(P0)  &&
      T2(P2+1) != T1(P1)  &&
      T2(P2+1) != T3(P3)  &&
      T2(P2+1) != T4(P4)  &&
      T2(P2+1) != T5(P5)  &&
      T2(P2+1) != T6(P6)  &&
      T2(P2+1) != T7(P7)  &&
      RA + A2(P2+1) <= LA && 
      RB + B2(P2+1) <= LB && 
      RC + C2(P2+1) <= LC && 
      RD + D2(P2+1) <= LD  
     )  ->
       move(2). AllTrains(P0,P1,(P2+1)mod 13,P3,P4,P5,P6,P7,RA+A2(P2+1),RB+B2(P2+1),RC+C2(P2+1),RD+D2(P2+1))
     +
     (P3 < 13 &&
      T3(P3+1) != T0(P0)  &&
      T3(P3+1) != T1(P1)  &&
      T3(P3+1) != T2(P2)  &&
      T3(P3+1) != T4(P4)  &&
      T3(P3+1) != T5(P5)  &&
      T3(P3+1) != T6(P6)  &&
      T3(P3+1) != T7(P7)  &&
      RA + A3(P3+1) <= LA && 
      RB + B3(P3+1) <= LB && 
      RC + C3(P3+1) <= LC && 
      RD + D3(P3+1) <= LD  
     )  ->
       move(3). AllTrains(P0,P1,P2,(P3+1)mod 13,P4,P5,P6,P7,RA+A3(P3+1),RB+B3(P3+1),RC+C3(P3+1),RD+D3(P3+1))
     +
     (P4 < 13 &&
      T4(P4+1) != T0(P0)  &&
      T4(P4+1) != T1(P1)  &&
      T4(P4+1) != T2(P2)  &&
      T4(P4+1) != T3(P3)  &&
      T4(P4+1) != T5(P5)  &&
      T4(P4+1) != T6(P6)  &&
      T4(P4+1) != T7(P7)  &&
      RA + A4(P4+1) <= LA && 
      RB + B4(P4+1) <= LB && 
      RC + C4(P4+1) <= LC && 
      RD + D4(P4+1) <= LD  
     )  ->
       move(4). AllTrains(P0,P1,P2,P3,(P4+1)mod 13,P5,P6,P7,RA+A4(P4+1),RB+B4(P4+1),RC+C4(P4+1),RD+D4(P4+1))
       
     +
     (P5 < 13 &&
      T5(P5+1) != T0(P0)  &&
      T5(P5+1) != T1(P1)  &&
      T5(P5+1) != T2(P2)  &&
      T5(P5+1) != T3(P3)  &&
      T5(P5+1) != T4(P4)  &&
      T5(P5+1) != T6(P6)  &&
      T5(P5+1) != T7(P7)  &&
      RA + A5(P5+1) <= LA && 
      RB + B5(P5+1) <= LB && 
      RC + C5(P5+1) <= LC && 
      RD + D5(P5+1) <= LD  
     )  ->
       move(5). AllTrains(P0,P1,P2,P3,P4,(P5+1)mod 13,P6,P7,RA+A5(P5+1),RB+B5(P5+1),RC+C5(P5+1),RD+D5(P5+1))
     +
     (P6 < 13 &&
      T6(P6+1) != T0(P0)  &&
      T6(P6+1) != T1(P1)  &&
      T6(P6+1) != T2(P2)  &&
      T6(P6+1) != T3(P3)  &&
      T6(P6+1) != T4(P4)  &&
      T6(P6+1) != T5(P5)  &&
      T6(P6+1) != T7(P7)  &&
      RA + A6(P6+1) <= LA && 
      RB + B6(P6+1) <= LB && 
      RC + C6(P6+1) <= LC && 
      RD + D6(P6+1) <= LD  
     )  ->
       move(6). AllTrains(P0,P1,P2,P3,P4,P5,(P6+1)mod 13,P7,RA+A6(P6+1),RB+B6(P6+1),RC+C6(P6+1),RD+D6(P6+1))
     +
     (P7 < 13 &&
      T7(P7+1) != T0(P0)  &&
      T7(P7+1) != T1(P1)  &&
      T7(P7+1) != T2(P2)  &&
      T7(P7+1) != T3(P3)  &&
      T7(P7+1) != T4(P4)  &&
      T7(P7+1) != T5(P5)  &&
      T7(P7+1) != T6(P6)  &&
      RA + A7(P7+1) <= LA && 
      RB + B7(P7+1) <= LB && 
      RC + C7(P7+1) <= LC && 
      RD + D7(P7+1) <= LD  
     )  ->
       move(7). AllTrains(P0,P1,P2,P3,P4,P5,P6,(P7+1)mod 13,RA+A7(P7+1),RB+B7(P7+1),RC+C7(P7+1),RD+D7(P7+1));


init   AllTrains(0,0,0,0,0,0,0,0, 1,1,1,1);
     

%%%%%%%%%%% verfication process : %%%%%%%%%%%%%%%%%
% 
%      just detecting deadlocks
% mcrl22lps mcrl2_cyclic8.txt temp.lps
% time lps2lts -rjittyc -v -D temp.lps 
% ltsinfo temp.lts  
% >
% > done with state space generation (119 levels, 159374352 states and 810710976 transition
% > PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
% > 5277 mazzanti  20   0 8250404 7,832g   9952 R 100,0 14,8  74:27.44 lps2lts
%
%        AGEF evaluation
% mcrl22lps mcrl2_cyclic8.txt temp.lps
% lps2pbes -fagefarrived.mcf  temp.lps  temp.pbes
% time pbes2bool -s2 -vrjittyc temp.pbes
% >
% > killed:9    on macOS
% > seg fault  with option -vrjittyc on Linux
% > in progress on linux withput -vrjittyc 
% >
%
% formula.mcf=  "mu X.(([!arrived]X) && (<true> true))"  ==  AF {arrived}
% formula.mcf=  "[ true* ] < true* . arrived > true"     ==  AG EF {arrived}
%  pbes2bool  -c print evidence on validity of formula, nedded by lpsxsim for 
% 
% the generation of counter-examples
%   pbes2bool -zb    breadth-first
%   pbes2bool -zd    depth-first
%   pbes2bool --todo  -strategy  
%   pbes2bool -v   --verbose  (verbose)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
