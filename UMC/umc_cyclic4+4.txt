Class REGION2 is
Vars:

---------------------------------------------------------------
T0: int[] := [ 1, 9,10,13,15,20,23,22,17,18,11, 9, 2, 1]; -- G1
T1: int[] := [ 3, 9,10,13,15,20,24,22,17,18,11, 9, 4, 3]; -- R1
T2: int[] := [ 5,27,11,13,16,20,25,22,17,18,12,27, 6, 5]; -- Y1
T3: int[] := [ 7,27,11,13,16,20,26,22,17,18,12,27, 8, 7]; -- B1
T4: int[] := [23,22,17,18,11, 9, 2, 1, 9,10,13,15,20,23]; -- G2
T5: int[] := [24,22,17,18,11, 9, 4, 3, 9,10,13,15,20,24]; -- R2
T6: int[] := [25,22,17,18,12,27, 6, 5,27,11,13,16,20,25]; -- Y2
T7: int[] := [26,22,17,18,12,27, 8, 7,27,11,13,16,20,26]; -- B2
----------------------------------------------------------------
P0: int :=0;
P1: int :=0;
P2: int :=0;
P3: int :=0;
P4: int :=0;
P5: int :=0;
P6: int :=0;
P7: int :=0;
----------------------------------------------------------------

------ region A: train constraints ------
A0: int[] := [ 0, 0, 0, 1, 0,-1, 0, 1, 0, 0,-1, 0, 0, 0]; -- G1
A1: int[] := [ 0, 0, 0, 1, 0,-1, 0, 1, 0, 0,-1, 0, 0, 0]; -- R1
A2: int[] := [ 0, 0, 1,-1, 0, 1, 0, 0, 0,-1, 0, 0, 0, 0]; -- Y1
A3: int[] := [ 0, 0, 1,-1, 0, 0, 0, 1, 0,-1, 0, 0, 0, 0]; -- B1
A4: int[] := [ 0, 1, 0, 0,-1, 0, 0, 0, 0, 0, 1, 0,-1, 0]; -- G2
A5: int[] := [ 0, 1, 0, 0,-1, 0, 0, 0, 0, 0, 1, 0,-1, 0]; -- R2
A6: int[] := [ 0, 0, 0,-1, 0, 0, 0, 0, 0, 1,-1, 0, 1, 0]; -- Y2
A7: int[] := [ 0, 1, 0,-1, 0, 0, 0, 0, 0, 1,-1, 0, 0, 0]; -- B2
------------------------------------------

------- region B: train constraints ------
B0: int[] := [ 0, 0, 0, 1, 0,-1, 0, 1, 0, 0,-1, 0, 0, 0]; -- G1
B1: int[] := [ 0, 0, 0, 1, 0,-1, 0, 1, 0, 0,-1, 0, 0, 0]; -- R1
B2: int[] := [ 0, 0, 1,-1, 0, 0, 0, 1, 0,-1, 0, 0, 0, 0]; -- Y1
B3: int[] := [ 0, 0, 1,-1, 0, 1, 0, 0, 0,-1, 0, 0, 0, 0]; -- B1
B4: int[] := [ 0, 1, 0, 0,-1, 0, 0, 0, 0, 0, 1, 0,-1, 0]; -- G2
B5: int[] := [ 0, 1, 0, 0,-1, 0, 0, 0, 0, 0, 1, 0,-1, 0]; -- R2
B6: int[] := [ 0, 1, 0,-1, 0, 0, 0, 0, 0, 1,-1, 0, 0, 0]; -- Y2
B7: int[] := [ 0, 0, 0,-1, 0, 0, 0, 0, 0, 1,-1, 0, 1, 0]; -- B2
------------------------------------------



------- region C: train constraints ------
C0: int[] := [ 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,-1, 0, 0, 0]; -- G1
C1: int[] := [ 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,-1, 0, 0, 0]; -- R1
C2: int[] := [ 0, 0, 1, 0, 0,-1, 0, 1, 0,-1, 0, 0, 0, 0]; -- Y1
C3: int[] := [ 0, 0, 1, 0, 0,-1, 0, 1, 0,-1, 0, 0, 0, 0]; -- B1
C4: int[] := [ 0, 0, 0, 0,-1, 0, 0, 0, 0, 0, 0, 0, 1, 0]; -- G2
C5: int[] := [ 0, 1, 0, 0,-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]; -- R2
C6: int[] := [ 0, 1, 0,-1, 0, 0, 0, 0, 0, 1, 0, 0,-1, 0]; -- Y2
C7: int[] := [ 0, 1, 0,-1, 0, 0, 0, 0, 0, 1, 0, 0,-1, 0]; -- B2
------------------------------------------


------- region D: train constraints ------
D0: int[] := [ 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,-1, 0, 0, 0]; -- G1
D1: int[] := [ 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,-1, 0, 0, 0]; -- R1
D2: int[] := [ 0, 0, 1, 0, 0,-1, 0, 1, 0,-1, 0, 0, 0, 0]; -- Y1
D3: int[] := [ 0, 0, 1, 0, 0,-1, 0, 1, 0,-1, 0, 0, 0, 0]; -- B1
D4: int[] := [ 0, 1, 0, 0,-1, 0, 0, 0, 0, 0, 0, 0, 0, 0]; -- G2
D5: int[] := [ 0, 0, 0, 0,-1, 0, 0, 0, 0, 0, 0, 0, 1, 0]; -- R2
D6: int[] := [ 0, 1, 0,-1, 0, 0, 0, 0, 0, 1, 0, 0,-1, 0]; -- Y2
D7: int[] := [ 0, 1, 0,-1, 0, 0, 0, 0, 0, 1, 0, 0,-1, 0]; -- B2
------------------------------------------


-------------------------------------------------------------
RA: int :=1;  -- initial value for region RA
RB: int :=1;  -- initial value for region RB
RC: int :=1;  -- initial value for region RC
RD: int :=1;  -- initial value for region RD
LA: int :=7;  -- limit value for region RA
LB: int :=7;  -- limit value for region RB
LC: int :=7;  -- limit value for region RC
LD: int :=7;  -- limit value for region RD
-------------------------------------------------------------------

State Top =s1

Behavior:

------------------------- train 0 -----------------------------
s1 -> s1
 {- [T0[P0+1] != T1[P1] &
     T0[P0+1] != T2[P2] &
     T0[P0+1] != T3[P3] &
     T0[P0+1] != T4[P4] &
     T0[P0+1] != T5[P5] &
     T0[P0+1] != T6[P6] &
     T0[P0+1] != T7[P7] &
     RA + A0[P0+1] <= LA &
     RB + B0[P0+1] <= LB &
     RC + C0[P0+1] <= LC &
     RD + D0[P0+1] <= LD ] /
  P0 := P0 +1;
  if P0=13 { P0 :=0};
  RA = RA + A0[P0];
  RB = RB + B0[P0];
  RC = RC + C0[P0];
  RD = RD + D0[P0];
 }

------------------------- train 1 -----------------------------
s1 -> s1 
 {- [T1[P1+1] != T0[P0] &
     T1[P1+1] != T2[P2] &
     T1[P1+1] != T3[P3] &
     T1[P1+1] != T4[P4] &
     T1[P1+1] != T5[P5] &
     T1[P1+1] != T6[P6] &
     T1[P1+1] != T7[P7] &
     RA + A1[P1+1] <= LA &
     RB + B1[P1+1] <= LB  &
     RC + C1[P1+1] <= LC &
     RD + D1[P1+1] <= LD ] /
  P1 := P1 +1;
  if P1=13 { P1 :=0};
  RA = RA + A1[P1];
  RB = RB + B1[P1];
  RC = RC + C1[P1];
  RD = RD + D1[P1];
 }
     
------------------------- train 2 -----------------------------
s1 -> s1 
 {- [P2 < 6 &
     T2[P2+1] != T0[P0] &
     T2[P2+1] != T1[P1] &
     T2[P2+1] != T3[P3] &
     T2[P2+1] != T4[P4] &
     T2[P2+1] != T5[P5] &
     T2[P2+1] != T6[P6] &
     T2[P2+1] != T7[P7] &
     RA + A2[P2+1] <= LA &
     RB + B2[P2+1] <= LB &
     RC + C2[P2+1] <= LC &
     RD + D2[P2+1] <= LD ] /
  P2 := P2 +1;
  if P2=13 { P2 :=0};
  RA = RA + A2[P2];
  RB = RB + B2[P2];
  RC = RC + C2[P2];
  RD = RD + D2[P2];
 }

------------------------- train 3 -----------------------------
s1 -> s1 
 {- [P3 < 6 &
     T3[P3+1] != T0[P0] &
     T3[P3+1] != T1[P1] &
     T3[P3+1] != T2[P2] &
     T3[P3+1] != T4[P4] &
     T3[P3+1] != T5[P5] &
     T3[P3+1] != T6[P6] &
     T3[P3+1] != T7[P7] &
     RA + A3[P3+1] <= LA &
     RB + B3[P3+1] <= LB &
     RC + C3[P3+1] <= LC &
     RD + D3[P3+1] <= LD ] /
  P3 := P3 +1;
  if P3=13 { P3 :=0};
  RA = RA + A3[P3];
  RB = RB + B3[P3];
  RC = RC + C3[P3];
  RD = RD + D3[P3];
 }

------------------------- train 4 -----------------------------
s1 -> s1 
 {- [T4[P4+1] != T0[P0] &
     T4[P4+1] != T1[P1] &
     T4[P4+1] != T2[P2] &
     T4[P4+1] != T3[P3] &
     T4[P4+1] != T5[P5] &
     T4[P4+1] != T6[P6] &
     T4[P4+1] != T7[P7] &
     RA + A4[P4+1] <= LA &
     RB + B4[P4+1] <= LB &
     RC + C4[P4+1] <= LC &
     RD + D4[P4+1] <= LD ] /
  P4 := P4 +1;
  if P4=13 { P4 :=0};
  RA = RA + A4[P4];
  RB = RB + B4[P4];
  RC = RC + C4[P4];
  RD = RD + D4[P4];
 }

------------------------- train 5 -----------------------------
s1 -> s1 
 {- [T5[P5+1] != T0[P0] &
     T5[P5+1] != T1[P1] &
     T5[P5+1] != T2[P2] &
     T5[P5+1] != T3[P3] &
     T5[P5+1] != T4[P4] &
     T5[P5+1] != T6[P6] &
     T5[P5+1] != T7[P7] &
     RA + A5[P5+1] <= LA &
     RB + B5[P5+1] <= LB &
     RC + C5[P5+1] <= LC &
     RD + D5[P5+1] <= LD ] /
  P5 := P5 +1;
  if P5=13 { P5 :=0};
  RA = RA + A5[P5];
  RB = RB + B5[P5];
  RC = RC + C5[P5];
  RD = RD + D5[P5];
 }

------------------------- train 6 -----------------------------
s1 -> s1 
 {- [P6 <6 &
     T6[P6+1] != T0[P0] &
     T6[P6+1] != T1[P1] &
     T6[P6+1] != T2[P2] &
     T6[P6+1] != T3[P3] &
     T6[P6+1] != T4[P4] &
     T6[P6+1] != T5[P5] &
     T6[P6+1] != T7[P7] &
     RA + A6[P6+1] <= LA &
     RB + B6[P6+1] <= LB &
     RC + C6[P6+1] <= LC &
     RD + D6[P6+1] <= LD ] /
  P6 := P6 +1;
  if P6=13 { P6 :=0};
  RA = RA + A6[P6];
  RB = RB + B6[P6];
  RC = RC + C6[P6];
  RD = RD + D6[P6];
 } 

------------------------- train 7 -----------------------------
s1 -> s1 
 {- [P7 < 6 &
     T7[P7+1] != T0[P0] &
     T7[P7+1] != T1[P1] &
     T7[P7+1] != T2[P2] &
     T7[P7+1] != T3[P3] &
     T7[P7+1] != T4[P4] &
     T7[P7+1] != T5[P5] &
     T7[P7+1] != T6[P6] &
     RA + A7[P7+1] <= LA &
     RB + B7[P7+1] <= LB &
     RC + C7[P7+1] <= LC &
     RD + D7[P7+1] <= LD ] /
  P7 := P7 +1;
  if P7=13 { P7 :=0};
  RA = RA + A7[P7];
  RB = RB + B7[P7];
  RC = RC + C7[P7];
  RD = RD + D7[P7];
 }


-------------------------  Debugging -----------------------------
s1 -> s2 
 {- [(RA <0) or (RB<0) or (RC<0) or (RD<0)] / ERR.RuntimeError(Count)
 }

------------------------- termination -----------------------------
 s1 -> s1 
 {- [(P0=0) and (P1=0) and (P2=6) and (P3=6)&
       (P4=0) and (P5=0) and (P6=6) and (P7=6)] / Home}
 
end REGION2;

Objects:
 Count: Token;
 SYS: REGION2;

Abstractions {
 Action Home -> Home
 Action Error -> Error
-- State: 
--   SYS.P0=0 and
--   SYS.P1=0 and
--   SYS.P2=0 and
--   SYS.P3=0 and
--   SYS.P4=0 and
--   SYS.P5=0 and
--   SYS.P6=0 and
--   SYS.P7=0 -> Home  -- abstract label on final state
}


-- time umc -65 -z -m3 cyclic4-umc.txt AGEFHome.txt
--
-- time mcstats -m3 cyclic4-umc.txt
--
-------------------------------------------------------------------
The system has 16187796 states ( 0 final states ), and  76428121 transitions
The depth (breadth first) of the graph is 84 levels.
The maximum width of the graph occurs at level  43 level, and is of size  525428.
-------------------------------------------------------------------

